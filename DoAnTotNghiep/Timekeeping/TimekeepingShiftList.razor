<Row Gutter="8">
    <AntDesign.Col Span="12">
        <EditForm Model="timekeepingShiftFilterModel" OnSubmit="e => SearchAsync()">
            <Row Gutter="8">
                <AntDesign.Col Span="8">
                    <Select TItemValue="string" TItem="string"
                            Value="@timekeepingShiftFilterModel?.EffectiveState.ToString()" EnableSearch
                            OnSelectedItemChanged="e => EffectiveStateChangeAsync(e)">
                        <SelectOptions>
                            @foreach (var item in timekeepingShiftFilterModel.DataSource[timekeepingShiftFilterModel.Property.NameProperty(c => c.EffectiveState)])
                            {
                                <SelectOption TItemValue="string" TItem="string" Value="@item.Key" Label="@item.Value?.GetDisplay()" />
                            }
                        </SelectOptions>
                    </Select>
                </AntDesign.Col>
                <AntDesign.Col Span="6">
                    <Input TValue="string" Value="timekeepingShiftFilterModel.CodeOrName"
                           ValueChanged="e => timekeepingShiftFilterModel.Change(nameof(timekeepingShiftFilterModel.CodeOrName), e)"
                           Placeholder="Nhập tên, mã ca" />
                </AntDesign.Col>
                <AntDesign.Col Span="2" Class="flex-start-end">
                    <Button Type="@ButtonType.Primary" Icon="search" HtmlType="submit">Tìm kiếm</Button>
                </AntDesign.Col>
            </Row>
        </EditForm>
        <Row Gutter="8">
            <AntDesign.Col Span="24">
                <Table @ref="table" TItem="TimekeepingShiftViewModel" DataSource="@TimekeepingShiftViewModels"
                       ScrollBarWidth="10px"
                       Total="timekeepingShiftFilterModel.Page.Total" ScrollY="500px"
                       Loading="loading"
                       PageIndex="timekeepingShiftFilterModel.Page.PageIndex"
                       PageSize="timekeepingShiftFilterModel.Page.PageSize"
                       OnPageIndexChange="PageIndexChangeAsync"
                       OnPageSizeChange="PageSizeChangeAsync"
                       OnRowClick="OnRowClick">
                    <Column @bind-Field="@context.Stt" Width="50" ></Column>
                    <Column @bind-Field="@context.Code" Ellipsis Width="150"></Column>
                    <Column @bind-Field="@context.Name" Ellipsis Width="150" ></Column>
                    <Column @bind-Field="@context.StartTime" Format="HH:mm" ></Column>
                    <Column @bind-Field="@context.EndTime" Format="HH:mm" ></Column>
                    <Column @bind-Field="@context.EffectiveState">
                        <Template>
                            @if (context.EffectiveState == EffectiveState.Active)
                            {
                                <AntDesign.Text Copyable="false" Type="success">@context.EffectiveState.GetDescription()</AntDesign.Text>
                            }
                            else
                            {
                                <AntDesign.Text Copyable="false" Type="danger">@context.EffectiveState.GetDescription()</AntDesign.Text>
                            }
                        </Template>
                    </Column>
                </Table>
            </AntDesign.Col>
        </Row>
    </AntDesign.Col>
    <AntDesign.Col Span="12">
        <Row Gutter="8">
            <Space Size="@("small")" Style="margin-right: 10px">
                @if (editModel.ReadOnly)
                {
                    <SpaceItem>
                        <Button Type="@ButtonType.Primary" Color="Color.Green7" OnClick="Add">Thêm mới</Button>
                    </SpaceItem>
                    @if (editModel.Id.IsNotNullOrEmpty())
                    {
                        <SpaceItem>
                            <Button Type="@ButtonType.Primary" OnClick="Edit">Sửa</Button>
                        </SpaceItem>
                    }
                }
                @if (editModel.Id.IsNotNullOrEmpty())
                {
                    <SpaceItem>
                        <Popconfirm Placement="@Placement.BottomRight"
                                    OnConfirm="() => DeleteAsync()"
                                    OkText="Đồng ý"
                                    CancelText="Hủy">
                            <ChildContent>
                                <Button Type="@ButtonType.Primary" Danger>Xóa</Button>
                            </ChildContent>
                            <TitleTemplate>
                                Bạn có chắc chắn muốn xóa?
                            </TitleTemplate>
                        </Popconfirm>
                    </SpaceItem>
                }
                @if (!editModel.ReadOnly)
                {
                    <SpaceItem>
                        <Button Type="@ButtonType.Primary" OnClick="SaveAsync" Color="@Color.Green7">Lưu</Button>
                    </SpaceItem>
                    <SpaceItem>
                        <Popconfirm OnConfirm="() => Cancel()"
                                    OkText="Đồng ý"
                                    CancelText="Hủy">
                            <ChildContent>
                                <Button Type="@ButtonType.Primary" Danger>Hủy</Button>
                            </ChildContent>
                            <TitleTemplate>
                                Bạn có chắc chắn muốn hủy thao tác, các dữ liệu có thể sẽ không được lưu?
                            </TitleTemplate>
                        </Popconfirm>
                    </SpaceItem>
                }
            </Space>
        </Row>
        <EditForm Model="editModel">
            <DataAnnotationsValidator />
            <InputWatcher @ref="inputWatcher"></InputWatcher>
            <Row Gutter="8">
                <AntDesign.Col Span="12">
                    <LabelFor For="() => editModel.Code" HasRequired="true"></LabelFor>
                    <Input @bind-Value="editModel.Code" Disabled="editModel.ReadOnly" />
                    <ValidationMessage For="() => editModel.Code"></ValidationMessage>
                </AntDesign.Col>
                <AntDesign.Col Span="12">
                    <LabelFor For="() => editModel.Name" HasRequired="true"></LabelFor>
                    <Input @bind-Value="editModel.Name" Disabled="editModel.ReadOnly" />
                    <ValidationMessage For="() => editModel.Name"></ValidationMessage>
                </AntDesign.Col>
                <AntDesign.Col Span="12">
                    <LabelFor FieldIdentifier="context.Field(nameof(TimekeepingShiftEditModel.BreaksTimeType))"></LabelFor>
                    <Select TItemValue="string" TItem="string" Disabled="editModel.ReadOnly"
                            Value="@editModel?.BreaksTimeType.ToString()" EnableSearch
                            OnSelectedItemChanged="e => BreaksTimeTypeChange(e)">
                        <SelectOptions>
                            @foreach (var item in editModel.DataSource[editModel.Property.NameProperty(c => c.BreaksTimeType)])
                            {
                                <SelectOption TItemValue="string" TItem="string" Value="@item.Key" Label="@item.Value?.GetDisplay()" />
                            }
                        </SelectOptions>
                    </Select>
                    <ValidationMessage For="() => editModel.BreaksTimeType"></ValidationMessage>
                </AntDesign.Col>
                <AntDesign.Col Span="12">
                    <LabelFor FieldIdentifier="context.Field(nameof(TimekeepingShiftEditModel.Duration))"></LabelFor>
                    <Input Value="editModel.Duration.ToDecimalFormatDot().ToFormatedNumber()" Disabled="true"/>
                    <ValidationMessage For="() => editModel.Duration"></ValidationMessage>
                </AntDesign.Col>
                <AntDesign.Col Span="12">
                    <LabelFor FieldIdentifier="context.Field(nameof(TimekeepingShiftEditModel.StartTime))"></LabelFor>
                    @if (editModel.ReadOnly)
                    {
                        <TimePicker TValue="DateTime?"  @bind-Value="editModel.StartTime" Disabled="true" Format="HH:mm" Style="display:block"
                                    OnChange="editModel.TimeCalculator" Placeholder=@("Chọn thời gian")></TimePicker>
                        <ValidationMessage For="() => editModel.StartTime"></ValidationMessage>
                    }
                    else
                    {
                        <TimePicker TValue="DateTime?" @bind-Value="editModel.StartTime" Disabled="false" Format="HH:mm" Style="display:block"
                                    OnChange="editModel.TimeCalculator" Placeholder=@("Chọn thời gian")></TimePicker>
                        <ValidationMessage For="() => editModel.StartTime"></ValidationMessage>
                    }
                </AntDesign.Col>
                <AntDesign.Col Span="12">
                    <LabelFor FieldIdentifier="context.Field(nameof(TimekeepingShiftEditModel.EndTime))"></LabelFor>
                    @if (editModel.ReadOnly)
                    {
                        <TimePicker TValue="DateTime?"  @bind-Value="editModel.EndTime" Disabled="true" Format="HH:mm" Style="display:block"
                                    OnChange="editModel.TimeCalculator" Placeholder=@("Chọn thời gian")></TimePicker>
                        <ValidationMessage For="() => editModel.EndTime"></ValidationMessage>
                    }
                    else
                    {
                        <TimePicker TValue="DateTime?"  @bind-Value="editModel.EndTime" Disabled="false" Format="HH:mm" Style="display:block"
                                    OnChange="editModel.TimeCalculator" Placeholder=@("Chọn thời gian")></TimePicker>
                        <ValidationMessage For="() => editModel.EndTime"></ValidationMessage>
                    }
                </AntDesign.Col>
                @if (editModel?.BreaksTimeType == BreaksTimeType.Has)
                {
                    <AntDesign.Col Span="12">
                        <LabelFor FieldIdentifier="context.Field(nameof(TimekeepingShiftEditModel.StartBreaksTime))"
                                  HasRequired="true"></LabelFor>
                        @if (editModel.ReadOnly)
                        {
                            <TimePicker TValue="DateTime?"  @bind-Value="editModel.StartBreaksTime" Disabled="true"
                                        Format="HH:mm" Style="display:block"
                                        OnChange="editModel.TimeCalculator" Placeholder=@("Chọn thời gian")></TimePicker>
                            <ValidationMessage For="() => editModel.StartBreaksTime"></ValidationMessage>
                        }
                        else
                        {
                            <TimePicker TValue="DateTime?"  @bind-Value="editModel.StartBreaksTime" Disabled="false"
                                        Format="HH:mm" Style="display:block"
                                        OnChange="editModel.TimeCalculator" Placeholder=@("Chọn thời gian")></TimePicker>
                            <ValidationMessage For="() => editModel.StartBreaksTime"></ValidationMessage>
                        }
                    </AntDesign.Col>
                    <AntDesign.Col Span="12">
                        <LabelFor FieldIdentifier="context.Field(nameof(TimekeepingShiftEditModel.EndBreaksTime))"
                                  HasRequired="true"></LabelFor>
                        @if (editModel.ReadOnly)
                        {
                            <TimePicker TValue="DateTime?"  @bind-Value="editModel.EndBreaksTime" Disabled="true"
                                        Format="HH:mm" Style="display:block"
                                        OnChange="editModel.TimeCalculator" Placeholder=@("Chọn thời gian")></TimePicker>
                            <ValidationMessage For="() => editModel.EndBreaksTime"></ValidationMessage>
                        }
                        else
                        {
                            <TimePicker TValue="DateTime?"  @bind-Value="editModel.EndBreaksTime" Disabled="false"
                                        Format="HH:mm" Style="display:block"
                                        OnChange="editModel.TimeCalculator" Placeholder=@("Chọn thời gian")></TimePicker>
                            <ValidationMessage For="() => editModel.EndBreaksTime"></ValidationMessage>
                        }
                    </AntDesign.Col>
                }

                <AntDesign.Col Span="12">
                    <LabelFor FieldIdentifier="context.Field(nameof(TimekeepingShiftEditModel.TimekeepingTypeFull))" HasRequired="true"></LabelFor>
                    <Select DataSource="@TimekeepingTypes"
                            @bind-Value="@editModel.TimekeepingTypeFull"
                            LabelName="@nameof(TimekeepingType.CodeName)"
                            ValueName="@nameof(TimekeepingType.Code)"
                            Placeholder="Kiểu công"
                            AllowClear
                            EnableSearch TItem="TimekeepingType" TItemValue="string"
                            Disabled="editModel.ReadOnly">
                    </Select>
                    <ValidationMessage For="() => editModel.TimekeepingTypeFull"></ValidationMessage>
                </AntDesign.Col>
                <AntDesign.Col Span="12">
                    <LabelFor FieldIdentifier="context.Field(nameof(TimekeepingShiftEditModel.TimekeepingTypeOff))" HasRequired="true"></LabelFor>
                    <Select DataSource="@TimekeepingTypes"
                            @bind-Value="@editModel.TimekeepingTypeOff"
                            LabelName="@nameof(TimekeepingType.CodeName)"
                            ValueName="@nameof(TimekeepingType.Code)"
                            Placeholder="Kiểu công"
                            AllowClear
                            EnableSearch TItem="TimekeepingType" TItemValue="string"
                            Disabled="editModel.ReadOnly">
                    </Select>
                    <ValidationMessage For="() => editModel.TimekeepingTypeOff"></ValidationMessage>
                </AntDesign.Col>
                @if (editModel?.BreaksTimeType == BreaksTimeType.Has)
                {
                    <AntDesign.Col Span="12">
                        <LabelFor FieldIdentifier="context.Field(nameof(TimekeepingShiftEditModel.TimekeepingTypeFirst))"
                                   HasRequired="true"></LabelFor>
                        <Select DataSource="@TimekeepingTypes"
                                @bind-Value="@editModel.TimekeepingTypeFirst"
                                LabelName="@nameof(TimekeepingType.CodeName)"
                                ValueName="@nameof(TimekeepingType.Code)"
                                Placeholder="Kiểu công"
                                AllowClear
                                EnableSearch TItem="TimekeepingType" TItemValue="string"
                                Disabled="editModel.ReadOnly">
                        </Select>
                        <ValidationMessage For="() => editModel.TimekeepingTypeFirst"></ValidationMessage>
                    </AntDesign.Col>
                    <AntDesign.Col Span="12">
                        <LabelFor FieldIdentifier="context.Field(nameof(TimekeepingShiftEditModel.TimekeepingTypeSecond))"
                                   HasRequired="true"></LabelFor>
                        <Select DataSource="@TimekeepingTypes"
                                @bind-Value="@editModel.TimekeepingTypeSecond"
                                LabelName="@nameof(TimekeepingType.CodeName)"
                                ValueName="@nameof(TimekeepingType.Code)"
                                Placeholder="Kiểu công"
                                AllowClear
                                EnableSearch TItem="TimekeepingType" TItemValue="string"
                                Disabled="editModel.ReadOnly">
                        </Select>
                        <ValidationMessage For="() => editModel.TimekeepingTypeSecond"></ValidationMessage>
                    </AntDesign.Col>
                }
                <AntDesign.Col Span="12">
                    <LabelFor FieldIdentifier="context.Field(nameof(TimekeepingShiftEditModel.EffectiveState))"></LabelFor>
                    <Select TItemValue="string" TItem="string" Disabled="editModel.ReadOnly"
                            Value="@editModel?.EffectiveState.ToString()" EnableSearch
                            OnSelectedItemChanged="e => editModel.SetValue(editModel.Property.NameProperty(c => c.EffectiveState), e)">
                        <SelectOptions>
                            @foreach (var item in editModel.DataSource[editModel.Property.NameProperty(c => c.EffectiveState)])
                            {
                                <SelectOption TItemValue="string" TItem="string" Value="@item.Key" Label="@item.Value?.GetDisplay()" />
                            }
                        </SelectOptions>
                    </Select>
                    <ValidationMessage For="() => editModel.EffectiveState"></ValidationMessage>
                </AntDesign.Col>
            </Row>
        </EditForm>
    </AntDesign.Col>
</Row>
