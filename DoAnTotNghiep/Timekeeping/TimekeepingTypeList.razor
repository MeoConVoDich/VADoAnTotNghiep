<Row Gutter="8">
    <AntDesign.Col Span="12">
        <EditForm Model="timekeepingFilterModel" OnSubmit="e => SearchAsync()">
            <Row Gutter="8">
                <AntDesign.Col Span="8">
                    <Select TItemValue="string" TItem="string"
                            Value="@timekeepingFilterModel?.EffectiveState.ToString()" EnableSearch
                            OnSelectedItemChanged="e => EffectiveStateChangeAsync(e)">
                        <SelectOptions>
                            @foreach (var item in timekeepingFilterModel.DataSource[timekeepingFilterModel.Property.NameProperty(c => c.EffectiveState)])
                            {
                                <SelectOption TItemValue="string" TItem="string" Value="@item.Key" Label="@item.Value?.GetDisplay()" />
                            }
                        </SelectOptions>
                    </Select>
                </AntDesign.Col>
                <AntDesign.Col Span="6">
                    <Input TValue="string" Value="timekeepingFilterModel.CodeOrName"
                           ValueChanged="e => timekeepingFilterModel.Change(nameof(timekeepingFilterModel.CodeOrName), e)"
                           Placeholder="Nhập tên, mã kiểu công" />
                </AntDesign.Col>
                <AntDesign.Col Span="2" Class="flex-start-end">
                    <Button Type="@ButtonType.Primary" Icon="search" HtmlType="submit">Tìm kiếm</Button>
                </AntDesign.Col>
            </Row>
        </EditForm>
        <Row Gutter="8">
            <AntDesign.Col Span="24">
                <Table @ref="table" TItem="TimekeepingTypeViewModel" DataSource="@TimekeepingTypeViewModels"
                       ScrollBarWidth="10px"
                       Total="timekeepingFilterModel.Page.Total" ScrollY="500px"
                       Loading="loading"
                       PageIndex="timekeepingFilterModel.Page.PageIndex"
                       PageSize="timekeepingFilterModel.Page.PageSize"
                       OnPageIndexChange="PageIndexChangeAsync"
                       OnPageSizeChange="PageSizeChangeAsync"
                       OnRowClick="OnRowClick">
                    <Column @bind-Field="@context.Stt" Width="50" Fixed="left"></Column>
                    <Column @bind-Field="@context.Code" Ellipsis Width="150" Fixed="left"></Column>
                    <Column @bind-Field="@context.Name" Ellipsis Width="200" Fixed="left"></Column>
                    <Column @bind-Field="@context.Note"></Column>
                    <Column @bind-Field="@context.EffectiveState">
                        <Template>
                            @if (context.EffectiveState == EffectiveState.Active)
                            {
                                <AntDesign.Text Copyable="false" Type="success">@context.EffectiveState.GetDescription()</AntDesign.Text>
                            }
                            else
                            {
                                <AntDesign.Text Copyable="false" Type="danger">@context.EffectiveState.GetDescription()</AntDesign.Text>
                            }
                        </Template>
                    </Column>
                </Table>
            </AntDesign.Col>
        </Row>
    </AntDesign.Col>
    <AntDesign.Col Span="12">
        <Row Gutter="8">
            <Space Size="@("small")" Style="margin-right: 10px">
                @if (editModel.ReadOnly)
                {
                    <SpaceItem>
                        <Button Type="@ButtonType.Primary" Color="Color.Green7" OnClick="Add">Thêm mới</Button>
                    </SpaceItem>
                    @if (editModel.Id.IsNotNullOrEmpty())
                    {
                        <SpaceItem>
                            <Button Type="@ButtonType.Primary" OnClick="Edit">Sửa</Button>
                        </SpaceItem>
                    }
                }
                @if (editModel.Id.IsNotNullOrEmpty())
                {
                    <SpaceItem>
                        <Popconfirm Placement="@Placement.BottomRight"
                                    OnConfirm="() => DeleteAsync()"
                                    OkText="Đồng ý"
                                    CancelText="Hủy">
                            <ChildContent>
                                <Button Type="@ButtonType.Primary" Danger>Xóa</Button>
                            </ChildContent>
                            <TitleTemplate>
                                Bạn có chắc chắn muốn xóa?
                            </TitleTemplate>
                        </Popconfirm>
                    </SpaceItem>
                }
                @if (!editModel.ReadOnly)
                {
                    <SpaceItem>
                        <Button Type="@ButtonType.Primary" OnClick="SaveAsync" Color="@Color.Green7">Lưu</Button>
                    </SpaceItem>
                    <SpaceItem>
                        <Popconfirm OnConfirm="() => Cancel()"
                                    OkText="Đồng ý"
                                    CancelText="Hủy">
                            <ChildContent>
                                <Button Type="@ButtonType.Primary" Danger>Hủy</Button>
                            </ChildContent>
                            <TitleTemplate>
                                Bạn có chắc chắn muốn hủy thao tác, các dữ liệu có thể sẽ không được lưu?
                            </TitleTemplate>
                        </Popconfirm>
                    </SpaceItem>
                }
            </Space>
        </Row>
        <EditForm Model="editModel">
            <DataAnnotationsValidator />
            <InputWatcher @ref="inputWatcher"></InputWatcher>
            <Row Gutter="8">

                <AntDesign.Col Span="12">
                    <LabelFor For="() => editModel.Code" HasRequired="true"></LabelFor>
                    <Input @bind-Value="editModel.Code" Disabled="editModel.ReadOnly" />
                    <ValidationMessage For="() => editModel.Code"></ValidationMessage>
                </AntDesign.Col>
                <AntDesign.Col Span="12">
                    <LabelFor For="() => editModel.Name" HasRequired="true"></LabelFor>
                    <Input @bind-Value="editModel.Name" Disabled="editModel.ReadOnly" />
                    <ValidationMessage For="() => editModel.Name"></ValidationMessage>
                </AntDesign.Col>
                <AntDesign.Col Span="12">
                    <LabelFor For="() => editModel.Note"></LabelFor>
                    <Input @bind-Value="editModel.Note" Disabled="editModel.ReadOnly" />
                    <ValidationMessage For="() => editModel.Note"></ValidationMessage>
                </AntDesign.Col>
                <AntDesign.Col Span="12">
                    <LabelFor FieldIdentifier="context.Field(nameof(TimekeepingTypeEditModel.EffectiveState))"></LabelFor>
                    <Select TItemValue="string" TItem="string" Disabled="editModel.ReadOnly"
                            Value="@editModel?.EffectiveState.ToString()" EnableSearch
                            OnSelectedItemChanged="e => editModel.SetValue(editModel.Property.NameProperty(c => c.EffectiveState), e)">
                        <SelectOptions>
                            @foreach (var item in editModel.DataSource[editModel.Property.NameProperty(c => c.EffectiveState)])
                            {
                                <SelectOption TItemValue="string" TItem="string" Value="@item.Key" Label="@item.Value?.GetDisplay()" />
                            }
                        </SelectOptions>
                    </Select>
                    <ValidationMessage For="() => editModel.EffectiveState"></ValidationMessage>
                </AntDesign.Col>
            </Row>
        </EditForm>
    </AntDesign.Col>
</Row>
